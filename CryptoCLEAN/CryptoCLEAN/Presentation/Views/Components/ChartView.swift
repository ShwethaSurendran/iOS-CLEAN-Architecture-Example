//
//  ChartView.swift
//  CryptoCLEAN
//
//

import SwiftUI
import Charts

struct ChartView: View {
    
    var dataPoints: [Double]
    
    var body: some View {
        VStack {
            Chart {
                ForEach(Array(dataPoints.enumerated()), id:\.offset) {index, item in
                    LineMark(
                        x: .value("date", index),
                        y: .value("price", item)
                    )
                }
            }
            .padding()
            .frame(maxWidth: .infinity)
            .frame(height: 300)
            .foregroundStyle(dataPoints.first ?? 0 < dataPoints.last ?? 0 ? .green : .red)
        }
    }
}

#Preview {
    ChartView(dataPoints: [118343.348823438, 118669.277782182, 118653.713346162, 118565.820938645, 118603.92157793, 118536.701511424, 118356.07818469, 118563.479172477, 118501.770544725, 118022.146128796, 118289.331665274, 118335.976015475, 117740.492057878, 117653.925019481, 116820.751242152, 116489.764460764, 116391.846911264, 116112.829118078, 115744.991547444, 115457.872961154, 115193.266977124, 115881.738535699, 115593.024716471, 115653.792009098, 115567.068128318, 115137.481946455, 114917.383649709, 114825.560906845, 114922.647758695, 114737.399461042, 115259.226350472, 115722.393464845, 114321.830056028, 115457.055234967, 115341.310458359, 115001.683581098, 114390.774290284, 113789.061785239, 113288.235039543, 113893.841788938, 113899.431636926, 113069.934935092, 113252.124503933, 113832.085485024, 113578.495768088, 113673.746208127, 113852.386421068, 113967.983985955, 113942.32273668, 113655.068130214, 113959.344502805, 113672.366534918, 113637.561937219, 113556.143075638, 113723.064939229, 113608.9092074, 113459.16980155, 113019.512524631, 112875.598010324, 113176.420329178, 112758.525238824, 112296.378994096, 112368.149665991, 112549.78366449, 112896.804807892, 112869.397814425, 112572.128000355, 112894.699406741, 113073.657664504, 113457.521823052, 113649.542598706, 113435.828795706, 113577.791655908, 113567.168783778, 113668.199273655, 113670.862903931, 113638.413089395, 113912.573633525, 113866.721561819, 114046.813768085, 113941.79108715, 113782.638008955, 113926.701939366, 113964.774715089, 114042.995602664, 114347.948597044, 114310.967450145, 114396.622946193, 114398.335291346, 114319.437991191, 114235.102246736, 114869.248029851, 114666.599328658, 114776.256720564, 114621.923227184, 114348.291344446, 114382.086820508, 114449.117469622, 114690.845680358, 114543.96028195, 114442.549556112, 114292.157413552, 114454.11768116, 114408.473846876, 114795.987228748, 114761.913765411, 114831.313887566, 115347.842471276, 115196.629586087, 114928.075091024, 114765.842300864, 114874.118431263, 115143.714461218, 115291.21591306, 115030.809702462, 114871.184410966, 114735.399588845, 114717.482198133, 114256.258065109, 114366.729542869, 114372.095227957, 114149.639676487, 113952.075023346, 114292.621860999, 114683.080592469, 114783.830937225, 114789.317946373, 113993.951459391, 114353.482407682, 112866.553398573, 112919.762832715, 113148.656173136, 113553.509594104, 113385.799195313, 113543.528192675, 113596.539319526, 113436.08169528, 113954.922197686, 114097.764527784, 113820.09656731, 113813.928033815, 113604.501769461, 113515.526461492, 113469.766853428, 114133.761343541, 114083.753596983, 114200.392066871, 113881.674722224, 114123.587511318, 114036.837763006, 114197.201948326, 113924.329496192, 114359.677447973, 114949.535826594, 115436.22087606, 115134.519553207, 115562.504222758, 115487.571887521, 115210.408263534, 115110.790692989, 115114.782495833, 115132.546950694, 115013.391408662, 114913.508129621, 114721.05007059, 114559.348564432, 114594.58421535, 114334.982102643])
}
